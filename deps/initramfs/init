#!/bin/busybox sh

[ -e /dev/mem ] || mknod -m 660 /dev/mem c 1 1

# Mount the /proc and /sys filesystems.

[ -d /dev ] || mkdir -m 0755 /dev
[ -d /root ] || mkdir -m 0700 /root
[ -d /sys ] || mkdir /sys
[ -d /proc ] || mkdir /proc
[ -d /tmp ] || mkdir /tmp

mkdir -p /var/lock
mount -t sysfs -o nodev,noexec,nosuid none /sys 
mount -t proc -o nodev,noexec,nosuid none /proc 
tmpfs_size="10M"
if [ -e /etc/udev/udev.conf ]; then
 . /etc/udev/udev.conf
fi
mount -t tmpfs -o size=$tmpfs_size,mode=0755 udev /dev

[ -e /dev/console ] || mknod -m 0600 /dev/console c 5 1
[ -e /dev/null ] || mknod /dev/null c 1 3
[ -e /dev/sda1 ] || mknod /dev/sda1 b 8 1 
[ -e /dev/sdb1 ] || mknod /dev/sdb1 b 8 17
[ -e /dev/sdc1 ] || mknod /dev/sdc1 b 8 33
[ -e /dev/sdd1 ] || mknod /dev/sdd1 b 8 48



mkdir -p /mnt/usb


mount /dev/sda1 /mnt/usb


# Set up network interface and pull rootfs.
ifconfig eth0 up
udhcpc -t 5 -q -s /dhcp.helper

mkdir -p /mnt/ram

#### fixme add check for existence of boot.xml file!!!

set -- $(cat /mnt/usb/boot.xml | grep -oE '<Filename>.*<\/Filename>' | sed -e 's/<[^>]*>//g')
FS_TYPE=$(awk -F"\"" ' /BootSequence/ {print $8}' /mnt/usb/boot.xml)
echo "FS_TYPE: $FS_TYPE"


if  [  "$FS_TYPE" == "ingvarpack" ]; then
mkdir -p /mnt/ram
mount none /mnt/ram -t tmpfs -o size=1024m

for var in "$@"
do
    echo $var
    cd /mnt/ram
  if [ ${var: -8} == ".cpio.gz" ]; then zcat /mnt/usb/$var | cpio -idmuv; fi
  if [ ${var: -7} == ".tar.gz" ]; then tar -xvzf /mnt/usb/$var -C .; fi

done
fi

cp /var/dhcp_ip /mnt/ram/var/
cp /var/dhcp_interface /mnt/ram/var/


for var in $(cat /proc/net/dev | sed -n 's/.*\(eth[1-9]\).*/\1/p')
do
    echo $var
    M=$(cat /var/dhcp_ip | sed 's/^.*\.\([^.]*\)$/\1/')
    echo "auto $var" >> /mnt/ram//etc/network/interfaces
    echo "iface $var inet static" >> /mnt/ram//etc/network/interfaces
    echo "address 10.239.$M.${var:3}" >> /mnt/ram//etc/network/interfaces
    echo "netmask 255.255.240.0" >> /mnt/ram//etc/network/interfaces
    echo " " >> /mnt/ram//etc/network/interfaces
done




# Clean up.
umount /mnt/usb
mkdir -p /mnt/ram/mnt/perm
mount /dev/sda1 /mnt/ram/mnt/perm
umount /proc
umount /sys

[ -e /dev/mem ] || mknod -m 660 /dev/mem c 1 1

# Boot the real thing.
exec switch_root /mnt/ram /sbin/init
