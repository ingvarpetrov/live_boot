#!/bin/busybox sh

# Mount the /proc and /sys filesystems.
mount -t proc none /proc
mount -t sysfs none /sys
mount -t efivarfs none /sys/firmware/efi/efivars

[ -d /dev ] || mkdir -m 0755 /dev
[ -d /root ] || mkdir -m 0700 /root
[ -d /sys ] || mkdir /sys
[ -d /proc ] || mkdir /proc
[ -d /tmp ] || mkdir /tmp
mkdir -p /var/lock
mount -t sysfs -o nodev,noexec,nosuid none /sys 
mount -t proc -o nodev,noexec,nosuid none /proc 

# Note that this only becomes /dev on the real filesystem if udev's scripts
# are used; which they will be, but it's worth pointing out
tmpfs_size="10M"
if [ -e /etc/udev/udev.conf ]; then
 . /etc/udev/udev.conf
fi
mount -t tmpfs -o size=$tmpfs_size,mode=0755 udev /dev
[ -e /dev/console ] || mknod -m 0600 /dev/console c 5 1
[ -e /dev/null ] || mknod /dev/null c 1 3

# Set up network interface and pull rootfs.
ifconfig eth0 up
#udhcpc -t 5 -q -c "ini" -s /dhcp.helper
udhcpc -t 5 -q -x 0x3d:696e69 -s /dhcp.helper
mkdir -p /mnt/root
wget $(cat /var/boot_file) -O /tmp/fs


#cat boot.xml | grep -oE '<Filename>.*<\/Filename>' | sed -e 's/<[^>]*>//g'

#cp /INCAFW/firmware/boot.xml /INCAFW/boot/boot.xml
#sh 

#wget http://10.239.129.60:8081/live/filesystem.squashfs -O /tmp/filesystem.squashfs
# Mount the root filesystem.
busybox mount /tmp/fs /mnt/root -t squashfs -o loop

# Clean up.
umount /proc
umount /sys

# Boot the real thing.
exec switch_root /mnt/root /sbin/init
#exec boot /INCAFW /firmware .
